// <auto-generated />
using System;
using ControleAcesso.Infraestrutura.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleAcesso.Infraestrutura.Migrations
{
    [DbContext(typeof(ControleAcessoContext))]
    [Migration("20220318123212_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ControleAcesso.Class.Movimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sentido")
                        .HasColumnType("int");

                    b.Property<int>("StatusMovimento")
                        .HasColumnType("int");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Movimentos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Movimento");
                });

            modelBuilder.Entity("ControleAcesso.Class.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("ControleAcesso.Class.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("ControleAcesso.Domain.Modelos.NotaFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMovimento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MovimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumeroNotaFiscal")
                        .HasColumnType("int");

                    b.Property<double>("PesoNotaFiscal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MovimentoId");

                    b.ToTable("NotasFiscais");
                });

            modelBuilder.Entity("ControleAcesso.Domain.Modelos.Observacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMovimento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MovimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovimentoId");

                    b.ToTable("Observacoes");
                });

            modelBuilder.Entity("ControleAcesso.Class.EntradaFuncionario", b =>
                {
                    b.HasBaseType("ControleAcesso.Class.Movimento");

                    b.HasDiscriminator().HasValue("EntradaFuncionario");
                });

            modelBuilder.Entity("ControleAcesso.Class.MovimentoPesagem", b =>
                {
                    b.HasBaseType("ControleAcesso.Class.Movimento");

                    b.Property<double>("PesoChegada")
                        .HasColumnType("float");

                    b.Property<double>("PesoSaida")
                        .HasColumnType("float");

                    b.Property<string>("StatusPesagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalPesoNotaFiscal")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("MovimentoPesagem");
                });

            modelBuilder.Entity("ControleAcesso.Class.SaidaCarroEmpresa", b =>
                {
                    b.HasBaseType("ControleAcesso.Class.Movimento");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraEntrada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraSaida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KmEntrada")
                        .HasColumnType("int");

                    b.Property<int>("KmSaida")
                        .HasColumnType("int");

                    b.Property<int>("NivelCombustivelEntrada")
                        .HasColumnType("int");

                    b.Property<int>("NivelCombustivelSaida")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("SaidaCarroEmpresa");
                });

            modelBuilder.Entity("ControleAcesso.Class.Movimento", b =>
                {
                    b.HasOne("ControleAcesso.Class.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleAcesso.Class.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ControleAcesso.Domain.Modelos.NotaFiscal", b =>
                {
                    b.HasOne("ControleAcesso.Class.Movimento", null)
                        .WithMany("NotasFiscais")
                        .HasForeignKey("MovimentoId");
                });

            modelBuilder.Entity("ControleAcesso.Domain.Modelos.Observacao", b =>
                {
                    b.HasOne("ControleAcesso.Class.Movimento", null)
                        .WithMany("Observacoes")
                        .HasForeignKey("MovimentoId");
                });

            modelBuilder.Entity("ControleAcesso.Class.Movimento", b =>
                {
                    b.Navigation("NotasFiscais");

                    b.Navigation("Observacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
